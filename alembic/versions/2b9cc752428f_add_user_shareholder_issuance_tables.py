"""Add user, shareholder, issuance tables

Revision ID: 2b9cc752428f
Revises: d0fe5ff64204
Create Date: 2025-08-06 21:27:47.459669

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2b9cc752428f'
down_revision: Union[str, Sequence[str], None] = 'd0fe5ff64204'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shareholders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_shareholders_id'), 'shareholders', ['id'], unique=False)
    op.create_table('issuances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shareholder_id', sa.Integer(), nullable=True),
    sa.Column('number_of_shares', sa.Integer(), nullable=False),
    sa.Column('price_per_share', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['shareholder_id'], ['shareholders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_issuances_id'), 'issuances', ['id'], unique=False)
    op.drop_index(op.f('ix_share_issuances_id'), table_name='share_issuances')
    op.drop_table('share_issuances')
    op.drop_index(op.f('ix_shareholder_profiles_id'), table_name='shareholder_profiles')
    op.drop_table('shareholder_profiles')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shareholder_profiles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('shareholder_profiles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='shareholder_profiles_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='shareholder_profiles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_shareholder_profiles_id'), 'shareholder_profiles', ['id'], unique=False)
    op.create_table('share_issuances',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('shareholder_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('number_of_shares', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price_per_share', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('issued_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['shareholder_id'], ['shareholder_profiles.id'], name=op.f('share_issuances_shareholder_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('share_issuances_pkey'))
    )
    op.create_index(op.f('ix_share_issuances_id'), 'share_issuances', ['id'], unique=False)
    op.drop_index(op.f('ix_issuances_id'), table_name='issuances')
    op.drop_table('issuances')
    op.drop_index(op.f('ix_shareholders_id'), table_name='shareholders')
    op.drop_table('shareholders')
    # ### end Alembic commands ###
